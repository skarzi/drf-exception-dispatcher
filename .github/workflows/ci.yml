---
name: CI
'on':
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test_package:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.continue-on-error }}
    strategy:
      matrix:
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
        django-version:
          - 'Django~=2.2.0'
          - 'Django~=3.2.0'
          - 'Django~=4.0.0'
        django-rest-framework-version:
          - 'djangorestframework~=3.11.0'
          - 'djangorestframework~=3.12.0'
          - 'djangorestframework~=3.13.0'
        continue-on-error:
          - false

        include:
          - python-version: '3.10'
            django-rest-framework-version: >-
              https://github.com/encode/django-rest-framework/archive/master.zip
            django-version: 'https://github.com/django/django/archive/main.zip'
            continue-on-error: true
        exclude:
          - python-version: '3.7'
            django-rest-framework-version: 'djangorestframework~=3.11.0'
            django-version: 'Django~=4.0.0'
            continue-on-error: false
          - python-version: '3.7'
            django-rest-framework-version: 'djangorestframework~=3.12.0'
            django-version: 'Django~=4.0.0'
            continue-on-error: false
          - python-version: '3.7'
            django-rest-framework-version: 'djangorestframework~=3.13.0'
            django-version: 'Django~=4.0.0'
            continue-on-error: false

    steps:
      - uses: actions/checkout@v3
      - name: "set up python ${{ matrix.python-version }}"
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python-version }}"
      - name: install poetry
        run: |
          pip install --upgrade pip

          INSTALL_POETRY_URL="https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py"
          curl \
            --silent \
            --show-error \
            --location "${INSTALL_POETRY_URL}" \
          | python

          # add `poetry` to `${PATH}`
          echo "${HOME}/.poetry/bin" >> ${GITHUB_PATH}
      - uses: actions/cache@v3.0.5
        with:
          path: .venv
          key: "venv-${{ matrix.python-version }}\
            -${{ matrix.django-version }}\
            -${{ matrix.django-rest-framework-version }}\
            -${{ hashFiles('poetry.lock') }}"

      - name: install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install
          poetry run pip install \
            --upgrade \
          "${{ matrix.django-version }}" \
          "${{ matrix.django-rest-framework-version }}"
      - name: test
        run: make test
      - name: upload coverage to codecov
        uses: codecov/codecov-action@v3.1.0
        with:
          file: ./.tests_reports/coverage.xml

  test_commons:
    runs-on: ubuntu-latest
    steps:
      - name: setup latest node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
      - uses: actions/cache@v3.0.5
        with:
          path: ~/.npm
          key: "${{ runner.os }}-npm"
      - name: install test dependencies.
        run: |
          npm install --global markdownlint-cli
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: lint Markdown files
        run: markdownlint .
      - name: lint commit messages
        uses: wagoid/commitlint-github-action@v5.0.2
        with:
          failOnWarnings: true
